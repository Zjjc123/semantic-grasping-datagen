import argparse
import sys

from beaker import Beaker, JobExecution, DataMount

def get_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("dataset_name")
    return parser.parse_args()


def main():
    args = get_args()
    beaker = Beaker.from_env(check_for_upgrades=False)
    dataset = beaker.dataset.get(args.dataset_name)

    job_id = dataset.source_execution
    assert job_id is not None, f"Dataset {args.dataset_name} was not generated by a job!"

    job = beaker.job.get(job_id)
    assert job.is_finalized, f"Job {job_id} is not done!"
    execution: JobExecution = job.execution
    assert execution is not None, f"Job {job_id} has no associated execution!"
    datasets: list[DataMount] = execution.spec.datasets
    assert datasets is not None and len(datasets) > 0, f"Job {job_id} has no mounted datasets!"

    if len(non_gantry_datasets := [d for d in datasets if d.mount_path != "/gantry"]) == 1:
        dataset = non_gantry_datasets[0]
    elif len(data_datasets := [d for d in datasets if d.mount_path == "/data"]) == 1:
        print("Assuming dataset is mounted to /data", file=sys.stderr)
        dataset = data_datasets[0]
    else:
        raise ValueError(f"Could not find unambiguous dataset to use!")

    assert dataset.source.beaker, f"Dataset {args.dataset_name} is not a Beaker dataset!"
    print(beaker.dataset.get(dataset.source.beaker).full_name)


if __name__ == "__main__":
    main()
